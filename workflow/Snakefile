"""Beginning of execution for `snakemake` command and start of workflow.
To change the output produced by the command, add required files to `input` under `rule all`.
The corresponding config file for the project can be written under `configfile`."""

from collections import defaultdict
import os

# A different config file can be set here.
configfile: "config/rhesus.yaml"

# Create defaultdict of runs for samples.
# RUNS = defaultdict(set)
# for file in os.listdir(config["reads"]):
#     split = file.split(".")
#     RUNS[split[0]].add(split[1])

# # Create list of samples
with open(config["samples"]) as f:
    SAMPLE_NAMES = f.read().splitlines()
print(SAMPLE_NAMES)

# Project-specific variables


# For command that use bash specific syntax, these have to activated. Although they may only work with the bio environment.
#shell.executable("/bin/bash")
shell.prefix("source ~/.bash_profile; ")

wildcard_constraints:
    dataset="\w+",
    filter_method = "hard_filtered|VQSR",
    #organism_id = "\w+",
    mode = "SNP|indel",
    name="[A-Za-z0-9_\.]+",
    prefix="[A-Za-z0-9_/]+",
    path="[A-Za-z0-9_/]+",
    sample = "\w+",
    seq = "WGS|WES|GBS|AMP",
    workspace="[A-Za-z0-9_\.]+",

include: "rules/indices.smk"
include: "rules/variant_calling.smk"
include: "rules/variant_recalibration.smk"
include: "rules/hard_filter.smk"
include: "rules/gene_counts.smk"
include: "rules/phasing.smk"
include: "rules/kinship.smk"
include: "rules/relations.smk"
include: "rules/coverage.smk"
include: "rules/one_off.smk"
include: "rules/misc.smk"

rule all:
    """Generate target files. This rule runs automatically when Snakefile is run.
    Change the path under input to change the target files generated by snakemake.
    """
    
    input: # Input for generating README.md file
        config["results"] + "README.md",
        # User defined input goes below
        # These are two examples of how to structure desired files
        ## expand("{results}vcf/{sample}.g.vcf.gz", results=config["results"], sample=SAMPLE_NAMES)
        ## config["results"] + "db/cohort.sample_map"
        expand(config["results"] + "gvcf/{sample}.g.vcf.gz", sample=SAMPLE_NAMES),

